name: Release
env:
  PYTHON_VERSION: '3.8'
  TF_VERSION: '2.12.0'
on:
  release:
    types: [published]
jobs:
  pypi-publish:
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/keras-aug
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      id: setup-python
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Cache virtualenv
      uses: actions/cache@v3
      id: cache-venv
      with:
        path: ./.venv/
        key: ${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-venv-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-venv-
    - name: Install dependencies
      shell: bash
      run: |
        python -m venv ./.venv
        source ./.venv/bin/activate
        pip install --upgrade pip setuptools
        pip install tensorflow-cpu==${{ env.TF_VERSION }}
        pip install -e ".[tests]" --progress-bar off --upgrade
      if: steps.cache-venv.outputs.cache-hit != 'true'
    - name: Build wheels
      shell: bash
      run: |
        source ./.venv/bin/activate
        pip install --upgrade pip setuptools wheel twine build
        python -m build
    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true
