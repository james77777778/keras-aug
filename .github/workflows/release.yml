name: Release
env:
  PYTHON_VERSION: '3.8'
  TF_VERSION: '2.12.0'
  TFP_VERSION: '0.20.0'
  KERASCV_VERSION: '0.5.1'
on:
  release:
    types: [published]
jobs:
  deploy:
    name: Build and deploy release wheels
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      id: setup-python
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Cache virtualenv
      uses: actions/cache@v3
      id: cache-venv
      with:
        path: ./.venv/
        key: ${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-venv-${{ hashFiles('setup.py') }}
        restore-keys: |
          ${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-venv-
    - name: Install dependencies
      shell: bash
      run: |
        python -m venv ./.venv
        source ./.venv/bin/activate
        pip install --upgrade pip setuptools
        pip install tensorflow-cpu==${{ env.TF_VERSION }}
        pip install tensorflow_probability==${{ env.TFP_VERSION }}
        pip install keras-cv==${{ env.KERASCV_VERSION }}
        pip install -e ".[tests]" --progress-bar off --upgrade
      if: steps.cache-venv.outputs.cache-hit != 'true'
    - name: Build and upload wheels
      shell: bash
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        source ./.venv/bin/activate
        pip install --upgrade pip setuptools wheel twine
        python setup.py sdist bdist_wheel
        twine upload dist/*.whl
