name: Tests

on:
  push:
  pull_request:
  release:
    types: [created]
jobs:
  format:
    name: Check the code format
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    - name: Get pip cache dir
      id: get-pip-cache-dir
      run: |
        python -m pip install --upgrade pip setuptools
        echo "::set-output name=dir::$(pip cache dir)"
    - name: Cache pip
      uses: actions/cache@v3
      id: cache-pip
      with:
        path: ${{ steps.get-pip-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      if: steps.cache-pip.outputs.cache-hit != 'true'
      run: |
        pip install tensorflow==2.12.0
        pip install "keras-cv @ git+https://github.com/keras-team/keras-cv.git"
        pip install -e ".[tests]" --progress-bar off --upgrade
    - name: Lint
      run: bash shell/lint.sh
  test:
    needs: format
    name: Test the code
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    - name: Get pip cache dir
      id: get-pip-cache-dir
      run: |
        python -m pip install --upgrade pip setuptools
        echo "::set-output name=dir::$(pip cache dir)"
    - name: Cache pip
      uses: actions/cache@v3
      id: cache-pip
      with:
        path: ${{ steps.get-pip-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}-test
        restore-keys: |
          ${{ runner.os }}-pip-test-
    - name: Install dependencies
      if: steps.cache-pip.outputs.cache-hit != 'true'
      run: |
        pip install tensorflow-cpu==2.12.0
        pip install "keras-cv @ git+https://github.com/keras-team/keras-cv.git"
        pip install -e ".[tests]" --progress-bar off --upgrade
    - name: Test with pytest
      run: bash shell/pytest.sh
